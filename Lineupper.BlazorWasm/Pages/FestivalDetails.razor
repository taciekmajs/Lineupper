@page "/festivaldetails/{id:guid}"
@using Lineupper.Application.Dto
@using Lineupper.SharedKernel.Enums
@inject HttpClient Http
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage

<PageTitle>Szczegóły festiwalu</PageTitle>

<style>
    body {
        background: linear-gradient(to bottom right, #f8f9fa, #e9ecef);
        min-height: 100vh;
    }
</style>

<div class="container py-4">
    <div class="row justify-content-center">
        <div class="col-lg-10">
            @if (festival == null)
            {
                <div class="alert alert-info text-center">Ładowanie...</div>
            }
            else
            {
                <div class="card shadow-sm p-4">
                    <h3 class="text-primary mb-3">@festival.Name</h3>
                    <p><strong>Data:</strong> @festival.StartDate:dd.MM.yyyy – @festival.EndDate:dd.MM.yyyy</p>
                    <p><strong>Godziny koncertów:</strong> @festival.ConcertStartTime - @festival.ConcertEndTime</p>
                    <p><strong>Lokalizacja:</strong> @festival.Location</p>
                    <p><strong>Status:</strong> @festival.Status</p>

                    <h5 class="mt-4">Zespoły:</h5>
                    @if (festival.Bands.Any())
                    {
                        <ul class="list-group">
                            @foreach (var band in festival.Bands)
                            {
                                <li class="list-group-item">
                                    <strong>@band.Name</strong> (@band.Genre), set: @band.SetDuration min
                                </li>
                            }
                        </ul>
                    }
                    else
                    {
                        <div class="alert alert-warning mt-2">Brak przypisanych zespołów.</div>
                    }

                    @if (user is not null && user.Id == festival.OrganizerId)
                    {
                        @if (festival.Status == FestivalStatus.BeforeVoting)
                        {
                            <div class="mt-4">
                                <button class="btn btn-warning">Wygeneruj harmonogram</button>
                            </div>
                        }

                        <div class="mt-4">
                            <h5>Harmonogram</h5>
                            <p class="text-muted">Tu będzie wyświetlony harmonogram po wygenerowaniu.</p>
                        </div>
                    }
                    else if (user is not null && user.Id != festival.OrganizerId)
                    {
                        @if (festival.Status == FestivalStatus.BeforeVoting)
                        {
                            <div class="mt-4">
                                <h5>Głosowanie na zespoły</h5>
                                <EditForm Model="@votes" OnValidSubmit="HandleVoteSubmit">
                                    <DataAnnotationsValidator />
                                    <ValidationSummary />

                                    @foreach (var vote in votes)
                                    {
                                        <div class="mb-3">
                                            <label class="form-label">@vote.BandName:</label>
                                            <InputSelect class="form-select" @bind-Value="vote.SelectedValue">
                                                <option value="">Nie znam</option>
                                                @for (int i = 1; i <= 10; i++)
                                                {
                                                    <option value="@i">@i</option>
                                                }
                                            </InputSelect>
                                        </div>
                                    }

                                    <button type="submit" class="btn btn-primary">Zagłosuj</button>
                                </EditForm>
                            </div>
                        }
                        else if (festival.Status == FestivalStatus.AfterVoting)
                        {
                            <div class="mt-4">
                                <h5>Harmonogram</h5>
                                <p class="text-muted">Tu będzie widoczny harmonogram koncertów.</p>
                            </div>
                        }
                    }
                </div>
            }
        </div>
    </div>
</div>

@code {
    [Parameter]
    public Guid id { get; set; }

    private FestivalDto? festival;
    private AuthUserDto? user;

    private List<VoteEntry> votes = new();

    protected override async Task OnInitializedAsync()
    {
        user = await LocalStorage.GetItemAsync<AuthUserDto>("user");
        festival = await Http.GetFromJsonAsync<FestivalDto>($"api/Festival/{id}");

        if (festival?.Bands != null)
        {
            votes = festival.Bands.Select(b => new VoteEntry
                {
                    BandName = b.Name,
                    SelectedValue = ""
                }).ToList();
        }
    }

    private void HandleVoteSubmit()
    {
        foreach (var vote in votes)
        {
            Console.WriteLine($"Zespół: {vote.BandName}, Ocena: {vote.SelectedValue}");
        }
        // TODO: Wyślij głosy do API
    }

    public class VoteEntry
    {
        public string BandName { get; set; } = string.Empty;
        public string SelectedValue { get; set; } = string.Empty;
    }

    public class AuthUserDto
    {
        public Guid Id { get; set; }
        public string Username { get; set; }
        public string Email { get; set; }
        public string PasswordHash { get; set; }
        public UserType UserType { get; set; }
    }
}
