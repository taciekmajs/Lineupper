@page "/festivals"
@using System.Net.Http.Json
@inject HttpClient Http

<h3>Lista festiwali</h3>

<div class="row mb-3">
    <div class="col-md-4">
        <label>Nazwa festiwalu:</label>
        <input type="text" class="form-control" @bind="searchName" placeholder="np. Rockowy Szał" />
    </div>
    <div class="col-md-4">
        <label>Lokalizacja:</label>
        <input type="text" class="form-control" @bind="searchLocation" placeholder="np. Kraków" />
    </div>
    <div class="col-md-4">
        <label>Status:</label>
        <select class="form-select" @bind="searchStatus">
            <option value="">-- wszystkie --</option>
            <option value="Przed głosowaniem">Przed głosowaniem</option>
            <option value="Po głosowaniu">Po głosowaniu</option>
        </select>
    </div>
</div>

@if (FilteredFestivals is null)
{
    <p>Ładowanie danych...</p>
}
else if (!FilteredFestivals.Any())
{
    <p>Brak festiwali spełniających kryteria wyszukiwania.</p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Nazwa</th>
                <th>Data</th>
                <th>Lokalizacja</th>
                <th>Status</th>
                <th>Akcja</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var fest in FilteredFestivals)
            {
                <tr>
                    <td>@fest.Name</td>
                    <td>@fest.StartDate.ToShortDateString()</td>
                    <td>@fest.Location</td>
                    <td>@fest.Status</td>
                    <td>
                        <a href="/festivaldetails/@fest.Id" class="btn btn-sm btn-primary">Szczegóły</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private string searchName = "";
    private string searchLocation = "";
    private string searchStatus = "";

    private List<FestivalDto>? allFestivals;

    private IEnumerable<FestivalDto> FilteredFestivals =>
        allFestivals?.Where(f =>
            (string.IsNullOrWhiteSpace(searchName) || f.Name.Contains(searchName, StringComparison.OrdinalIgnoreCase)) &&
            (string.IsNullOrWhiteSpace(searchLocation) || f.Location.Contains(searchLocation, StringComparison.OrdinalIgnoreCase)) &&
            (string.IsNullOrWhiteSpace(searchStatus) || f.Status == searchStatus)
        ) ?? Enumerable.Empty<FestivalDto>();

    protected override async Task OnInitializedAsync()
    {
        allFestivals = await Http.GetFromJsonAsync<List<FestivalDto>>("api/Festival");
    }

    public class FestivalDto
    {
        public Guid Id { get; set; }
        public string Name { get; set; }
        public string Location { get; set; }
        public DateTime StartDate { get; set; }
        public DateTime EndDate { get; set; }
        public string Status { get; set; }
    }
}